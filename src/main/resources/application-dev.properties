#spring:
#  profiles:
#    include=datasource,mybatis,thymeleaf,file,redis

# datasource.start
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/template_project?characterEncoding=UTF-8&useUnicode=true&autoReconnect=true&zeroDateTimeBehavior=round&useOldAliasMetadataBehavior=true&allowMultiQueries=true&serverTimezone=GMT%2B8
#spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.tomcat.max-idle=10
#spring.datasource.tomcat.max-active=50
#spring.datasource.tomcat.max-wait=10000
#spring.datasource.tomcat.initial-size=5
##这是默认隔离级别为读写提交
##spring.datasource.tomcat.default-transaction-isolation = 2

# 显示sql, 分析sql执行时间
spring.datasource.driver-class-name=com.p6spy.engine.spy.P6SpyDriver
spring.datasource.url=jdbc:p6spy:mysql://localhost:3306/template_project?characterEncoding=UTF-8&useUnicode=true&autoReconnect=true&zeroDateTimeBehavior=round&useOldAliasMetadataBehavior=true&allowMultiQueries=true&serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.tomcat.max-idle=10
spring.datasource.tomcat.max-active=50
spring.datasource.tomcat.max-wait=10000
spring.datasource.tomcat.initial-size=5

# 单行日志
logMessageFormat=com.p6spy.engine.spy.appender.SingleLineFormat
# 使用Slf4J记录sql
appender=com.p6spy.engine.spy.appender.Slf4JLogger
# 是否开启慢SQL记录
outagedetection=true
# 慢SQL记录标准，单位秒
outagedetectioninterval=2
#日期格式
dateformat=yyyy-MM-dd HH:mm:ss
#这是默认隔离级别为读写提交
#spring.datasource.tomcat.default-transaction-isolation = 2
# datasource.end

#  mybatis.end
mybatis-plus.type-aliases-package=com.cxy.entity
#这里需要指定xml文件路径，不然找不到抱错
mybatis-plus.mapper-locations=classpath:mapper/*Mapper.xml
# 显示sql, 分析性能
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
#  mybatis.end

# thymeleaf.start
#开启thymeleaf视图解析
spring.thymeleaf.enabled=true
#编码
spring.thymeleaf.encoding=utf-8
#前缀
spring.thymeleaf.prefix=classpath:/templates/
#是否使用缓存
spring.thymeleaf.cache=false
#严格的HTML语法模式
spring.thymeleaf.mode=HTML
#后缀名
# thymeleaf.end


# file.start
# 是否启用Spring MVC多分部上传功能
spring.servlet.multipart.enabled=true
# 将文件写入磁盘的阈值，值可以使用后缀 “MB” ,"KB" 来表示兆字节或字节大小
spring.servlet.multipart.file-size-threshold=0
# 指定默认上传的文件夹
spring.servlet.multipart.location=e:/springboot/image
# 限制单个文件最大大小
spring.servlet.multipart.max-file-size=10MB
# 限制所有文件最大大小
spring.servlet.multipart.max-request-size=100MB
# 是否延迟多部份文件请求的参数和文件的解析
spring.servlet.multipart.resolve-lazily=false
# file.end


#  redis.start
#配置连接池
spring.redis.host=192.168.10.128
spring.redis.port=6379
spring.redis.password=123456
spring.redis.timeout=1000
spring.redis.jedis.pool.min-idle=5
spring.redis.jedis.pool.max-active=10
spring.redis.jedis.pool.max-idle=10
spring.redis.jedis.pool.max-wait=2000
spring.cache.type=redis
spring.cache.cache-names=redisCache
#  redis.end


#mongodb.start
#spring.data.mongodb.uri=mongodb://127.0.0.1:27017/mytest
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=mytest
spring.data.mongodb.username=cxy
spring.data.mongodb.password=mytest
spring.data.mongodb.authentication-database=mytest
#mongodb.end

##activemq.start
## ActiveMq地址
#spring.activemq.broker-url=tcp://localhost:61616
#spring.activemq.user=admin
#spring.activemq.password=admin
## 是否启用连接池
#spring.activemq.pool.enabled=true
## 最大的连接数
#spring.activemq.pool.max-connections=50
## 最大失效时间
#spring.activemq.pool.idle-timeout=30000s
## activeMq信任的包
#spring.activemq.packages.trusted=com.cxy.entity,java.lang
## 信任所有包
##spring.activemq.packages.trust-all=true
## 是否启用发布订阅模式，默认为false, 即启用的是点对点模式
#spring.jms.pub-sub-domain=true
## 默认目的地
#spring.jms.template.default-destination=activemq.default.destination
##activemq.end


##logging.start
## 日志文件,绝对路径或相对路径
#logging.file.name=D:/logs/all.log
##logging.end


##rabbitmq.start
## 服务器地址
#spring.rabbitmq.addresses=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest
## 确认发送的消息已经被消费
#spring.rabbitmq.publisher-confirm-type=correlated
## RabbitMq的消息队列名称，由它发送字符串
#rabbitmq.queue.msg=spring-boot-msg
## RabbitMq的消息队列的名称，由它发送用户对象
#rabbitmq.queue.user=spring-boot-queue-user
##rabbitmq.end


##security.start
#spring.security.user.name=user
#spring.security.user.password=123456
#system.user.password.secret=uvwxyz
##security.end



